@font-face {
	font-family: 'Mohave';
	src: url('../fonts/Mohave.eot'); /* IE9 Compat Modes */
	src: url('../fonts/Mohave.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
	url('../fonts/Mohave.woff') format('woff'), /* Modern Browsers */
	url('../fonts/Mohave.ttf')  format('truetype'), /* Safari, Android, iOS */
	url('../fonts/Mohave.svg#3b03e6b824a93af237867d68dcecdeb9') format('svg'); /* Legacy iOS */

	font-style:   normal;
	font-weight:  400;
}

@font-face {
	font-family: 'Mohave';
	src: url('../fonts/Mohave-Bold.eot'); /* IE9 Compat Modes */
	src: url('../fonts/Mohave-Bold.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
	url('../fonts/Mohave-Bold.woff') format('woff'), /* Modern Browsers */
	url('../fonts/Mohave-Bold.ttf')  format('truetype'), /* Safari, Android, iOS */
	url('../fonts/Mohave-Bold.svg#478699ea99c9a4c3d27d5719feced985') format('svg'); /* Legacy iOS */

	font-style:   normal;
	font-weight:  700;
}

@font-face {
  font-family: 'Neutra Text Alt';
  src: url('../fonts/NeutraText-BookAlt.eot'); /* IE9 Compat Modes */
  src: url('../fonts/NeutraText-BookAlt.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('../fonts/NeutraText-BookAlt.woff') format('woff'), /* Modern Browsers */
       url('../fonts/NeutraText-BookAlt.ttf')  format('truetype'), /* Safari, Android, iOS */
       url('../fonts/NeutraText-BookAlt.svg#790bf1ca2d6297f576439c0b32c6a271') format('svg'); /* Legacy iOS */

  font-style:   normal;
  font-weight:  400;
}



$font-heading: 'Mohave', sans-serif;
$font-heading-weight: 700;

$font-stack: 'Neutra Text Alt', sans-serif;

$font-size-base: 12px;
$font-size-navigation: 16px;

h1, h2, h3, h4, h5, h6 {
	font-family: $font-heading;
	font-weight: $font-heading-weight;
}
h1 {
	font-size: 3.5 * $font-size-base;
}
h2 {
	font-size: 3 * $font-size-base;
}
h3 {
	font-size: 2.5 * $font-size-base;
}
h4 {
	font-size: 2 * $font-size-base;
}
h5 {
	font-size: 1.5 * $font-size-base;
}
h6 {
	font-size: 1 * $font-size-base;
}
body {
	font-family: $font-stack;
	color: $color-light;
	line-height: 1.5;
	p {
		margin-bottom: $length-medium;
	}
}
a {
	color: $brand-primary;
	text-decoration: none;
	transition: color 200ms ease-in-out;
	&:hover {
		color: $color-light;
	}
}

// utility classes
.text-right {
	text-align: right;
}
.text-left {
	text-align: left;
}
.text-center {
	text-align: center;
}

// styling html style elements
em {
	font-style: italic;
}
strong {
	font-weight: 800;
}



// glitch effect for navigation. Shoutouts to chris coyier
// https://css-tricks.com/glitch-effect-text-images-svg/
@mixin textGlitch($name, $intensity, $textColor, $background, $highlightColor1, $highlightColor2, $width, $height) {

  color: $textColor;
  position: relative;
  $steps: $intensity;

  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect(
              random($height)+px,
              $width+px,
              random($height)+px,
              0
            );
          }
        }
      }
    }
  }
  &:before,
  &:after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: $background;
    clip: rect(0, 0, 0, 0);
  }
  &:after {
    left: 2px;
    text-shadow: -1px 0 $highlightColor1;
    animation: #{$name}-anim-1 2s infinite linear alternate-reverse;
  }
  &:before {
    left: -2px;
    text-shadow: 2px 0 $highlightColor2;
    animation: #{$name}-anim-2 3s infinite linear alternate-reverse;
  }

}
